AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a VPC for CSYE 6225 Assignment 3

Parameters: 
  VpcCidrBlock:
    Description: "CIDR block for VPC"
    Type: String
    Default: "10.0.0.0/16"

  DbSubnetIpBlocks: 
    Description: "Comma-delimited list of three CIDR blocks"
    Type: CommaDelimitedList
    Default: "10.0.0.0/24, 10.0.1.0/24, 10.0.2.0/24"

  DestinationPublicRouteCidrBlock:   
    Description: "Destination CIDR block for Public Route"
    Type: String
    Default: "0.0.0.0/0"

  SecurityGroupCidrBlock:   
    Description: "CIDR block for Security Group"
    Type: String
    Default: "0.0.0.0/0"
  
  ImageId:
    Description: "AMI ID for creating EC2 Instance"
    Type: String
    Default: ""

  HTTPPort:
    Description: "HTTP Port"
    Type: String
    Default: "80"

  HTTPSPort:
    Description: "HTTPS Port"
    Type: String
    Default: "443"

  SshPort:
    Description: "SSH Port"
    Type: String
    Default: "22"

  WebAppPort:
    Description: "Port for running the web application"
    Type: String
    Default: "8080"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: 'default'
      Tags:
      - Key: Name
        Value: myVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: myVPC Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref DbSubnetIpBlocks]
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: myVPC Subnet 1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref DbSubnetIpBlocks]
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: myVPC Subnet 2

  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref DbSubnetIpBlocks]
      AvailabilityZone: !Select 
        - '2'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: myVPC Subnet 3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: myVPC Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref DestinationPublicRouteCidrBlock
      GatewayId: !Ref InternetGateway

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref PublicRouteTable

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref PublicRouteTable

  
  Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3
      RouteTableId: !Ref PublicRouteTable

  ApplicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Service
      GroupName: web     
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref HTTPPort
          ToPort: !Ref HTTPPort
          CidrIp: !Ref SecurityGroupCidrBlock
        - IpProtocol: tcp
          FromPort: !Ref SshPort
          ToPort: !Ref SshPort
          CidrIp: !Ref SecurityGroupCidrBlock
        - IpProtocol: tcp
          FromPort: !Ref HTTPSPort
          ToPort: !Ref HTTPSPort
          CidrIp: !Ref SecurityGroupCidrBlock
        - IpProtocol: tcp
          FromPort: !Ref WebAppPort
          ToPort: !Ref WebAppPort
          CidrIp: !Ref SecurityGroupCidrBlock
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: !Ref HTTPPort
          ToPort: !Ref HTTPPort
          CidrIp: !Ref SecurityGroupCidrBlock
      Tags:
        - Key: Name
          Value: myVPC EC2 Security Group

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref ImageId
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
        - !Ref ApplicationSecurityGroup
        SubnetId: !Ref Subnet1
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: '20'
            DeleteOnTermination: 'false'
      Tags:
        - Key: Name
          Value: myVPC EC2 Instance

Outputs:
  VPC:
    Description: VPC
    Value: !Ref VPC
  AZ1:
    Description: Availability Zone 1
    Value: !GetAtt 
      - Subnet1
      - AvailabilityZone
  AZ2:
    Description: Availability Zone 2
    Value: !GetAtt 
      - Subnet2
      - AvailabilityZone
  AZ3:
    Description: Availability Zone 3
    Value: !GetAtt 
      - Subnet3
      - AvailabilityZone

